<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>Software - Tag - Filip Czaplicki</title><link>https://starsep.com/tags/software/</link><description>Software - Tag - Filip Czaplicki</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 09 Aug 2023 21:35:26 +0200</lastBuildDate><atom:link href="https://starsep.com/tags/software/" rel="self" type="application/rss+xml"/><item><title>CLI</title><link>https://starsep.com/posts/cli/</link><pubDate>Wed, 09 Aug 2023 21:35:26 +0200</pubDate><guid>https://starsep.com/posts/cli/</guid><description><![CDATA[<p>This is the list of CLI tools I found useful someday.
It is useful reference as remembering all script names and options is cumbersome.
Especially those I use rarely.</p>
<h2 id="ripgrep">ripgrep</h2>
<p><a href="https://github.com/BurntSushi/ripgrep" target="_blank" rel="noopener noreferrer">rg</a> (ripgrep): great <code>grep</code> replacement.</p>
<p>Recursive search and respects .gitignore by default.</p>
<p>Possible to configure per repository with .rgignore</p>
<p>Useful options:</p>
<ul>
<li><code>-i</code>: case <strong>i</strong>nsentive</li>
<li><code>-v</code>: in<strong>v</strong>ert matching</li>
<li><code>-A n</code>(<strong>a</strong>fter), <code>-B n</code>(<strong>b</strong>efore), <code>-C n</code>(<strong>c</strong>ontext). <code>n</code> is number of lines</li>
<li><code>-u</code>, <code>-uu</code>, <code>-uuu</code>: <strong>u</strong>nrestricted searching with gitignored, hidden, and binary files</li>
<li><code>-l</code>: <strong>l</strong>ist files matching</li>
<li><code>-e</code>: patt<strong>e</strong>rn (regex) to search for. Useful when using multiple patterns</li>
<li><code>-o</code>: show <strong>o</strong>nly matching fragment</li>
</ul>
<h2 id="sd">sd</h2>
<p><a href="https://github.com/chmln/sd" target="_blank" rel="noopener noreferrer">sd</a>: sed alternative</p>]]></description></item><item><title>Nix</title><link>https://starsep.com/posts/nix/</link><pubDate>Sun, 25 Jun 2023 14:49:31 +0200</pubDate><guid>https://starsep.com/posts/nix/</guid><description>&lt;h2 id="what-is-nix">What is Nix?&lt;/h2>
&lt;p>I recently started using Nix. It is a package manager and a build system. It uses its own functional programming language.
At the moment I use it only as a package manager. For years, I maintained Ansible playbook for setting up my development environments.
Nix allows to simplify it and eventually might even replace it.
Instead of installing software via apt/pipx/downloading binaries from GitHub I use Nix.&lt;/p></description></item></channel></rss>