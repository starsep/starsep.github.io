[{"categories":null,"content":"Wprowadzenie Stworzyłem stronę https://starsep.com/osm-wtp/. Można na niej znaleźć porównanie danych OpenStreetMap transportu publicznego aglomeracji warszawskiej z danymi Warszawskiego Transportu Publicznego. Głównym celem jest możliwość łatwego znalezienia błędów oraz brakujących danych. Porównuję dla każdego wariantu linii listę przystanków. Dodatkowo znajdowana jest część błędów związanych z tagowaniem w OpenStreetMap. ","date":"2023-01-07","objectID":"/pl/posts/osm-wtp/:1:0","tags":null,"title":"Porównanie danych OSM z Warszawskim Transportem Publicznym","uri":"/pl/posts/osm-wtp/"},{"categories":null,"content":"Treść strony Na górze znajduje się lista linii z linkami. Dla linii z błędem wyświetla się ❌. Potem są wyniki dla kojejnych linii. Dla linii, gdzie wszystkie warianty zgadzają się z danymi WTP wyświetla się ok. Dla linii z błędami wyświetlone są tabelki porównujące nazwy i numery przystanków z OSM i WTP. Kolory oznaczają, co należy zrobić w OSM, aby doprowadzić do stanu z WTP: zielony dodać przystanki, czerwony usunąć, pomarańczowy zmienić. W nagłówku są przydatne linki. Na dole strony można znaleźć inne błędy oraz statystyki generowania. ","date":"2023-01-07","objectID":"/pl/posts/osm-wtp/:2:0","tags":null,"title":"Porównanie danych OSM z Warszawskim Transportem Publicznym","uri":"/pl/posts/osm-wtp/"},{"categories":null,"content":"Dane Dla każdej relacji type=route dodałem tag url do strony WTP z rozkładem tego wariantu linii. Przykładowy link: https://wtp.waw.pl/rozklady-jazdy/?wtp_md=3\u0026wtp_ln=166\u0026wtp_dr=A\u0026wtp_vr=1 Argumenty: wtp_md=3 oznacza rozkład z listą przystanków wtp_ln=166 to numer linii 166 wtp_dr=A to kierunek linii A/B wtp_vr=1 to numer wariantu linii w danym kierunku. Na stronie są one oznaczone literami A/B Do porównania listy przystanków wykorzystywane są numery przystanków (tag ref). W WTP numery przystanków mają sześć cyfr, gdzie pierwsze cztery oznaczają numer zespołu przystanków, a dwie ostatnie numer przystanku w zespole. Dodatkowo wyświetlane są nazwy (tag name). ","date":"2023-01-07","objectID":"/pl/posts/osm-wtp/:3:0","tags":null,"title":"Porównanie danych OSM z Warszawskim Transportem Publicznym","uri":"/pl/posts/osm-wtp/"},{"categories":null,"content":"Inne narzędzia Aglomeracja warszawska jest skonfigurawana w PTNA Public Transport Network Analysis. Dobrym źródłem jest GTFS Warsaw, który też można znaleźć w powyższym narzędziu. Jest także sporo narzędzi Quality Assurance, które znajdują błędy w relacjach transportu publicznego. ","date":"2023-01-07","objectID":"/pl/posts/osm-wtp/:4:0","tags":null,"title":"Porównanie danych OSM z Warszawskim Transportem Publicznym","uri":"/pl/posts/osm-wtp/"},{"categories":null,"content":"Szczegóły techniczne Strona jest hostowana za pomocą GitHub Pages. Kod można znaleźć na GitHubie. Wygenerowany HTML jest w osobnym repozytorium. Skrypt jest zaimplementowany w Pythonie. Ze względu na wydajność używam PyPy 3.9. HTML generowany jest za pomocą Jinja2. Używam styli SimpleCSS. Pozwalają na generowanie prostego HTMLa i wspierają jasny/ciemny motyw bez JavaScriptu. Generowanie uruchamiam za pomocą GitHub Actions. Chwilowo jest to 3 razy na dobę wieczorem. Mogę też uruchomić ręcznie z komputera lub na GitHubie. Dane z WTP (chwilowo HTML stron) są cache’owane. Dzięki temu kolejne uruchomienia danej doby są już dużo szybsze. Dane OpenStreetMap pobierane są z Overpassa z relacji komunikacji WTP. ","date":"2023-01-07","objectID":"/pl/posts/osm-wtp/:5:0","tags":null,"title":"Porównanie danych OSM z Warszawskim Transportem Publicznym","uri":"/pl/posts/osm-wtp/"},{"categories":null,"content":"Plany na przyszłość Naprawić dane w OSM dzięki temu narzędziu. Zrobić refaktor kodu. Aktualnie jest to skrypt bez sensownego podziału na funkcje i bez testów. (być może) Testy poprawności geometrii relacji m. in. czy punkty zatrzymań są częściami odcinków dróg, spójność geometrii, czy platformy są po prawej stronie. Takie testy robią inne narzędzia. To podejście może dać się zastosować dla innych miast. Ten artykuł można też znaleźć na https://osm.org/user/starsep/diary/400699 ","date":"2023-01-07","objectID":"/pl/posts/osm-wtp/:6:0","tags":null,"title":"Porównanie danych OSM z Warszawskim Transportem Publicznym","uri":"/pl/posts/osm-wtp/"},{"categories":null,"content":" Tabela na podstawie kolekcji BoardGameGeek Nazwa Ocena Trudność Gracze Czas Komentarz 7 Cudów Świata (7 Wonders) 7.61 2.32 2-7 30 min Aeon's End: Legacy 7.26 2.82 1-4 90 min BANG! 6.35 1.63 4-7 40 min BANG! Dodge City 6.42 1.65 3-8 40 min BANG! W Samo Południe, Za Garść Kart (BANG! High Noon/A Fistful of Cards) 5.60 1.50 4-7 40 min Brass: Birmingham 8.43 3.91 2-4 120 min Brzdęk! W! Kosmosie!: Raban w próżni (Clank! In! Space!: A Deck-Building Adventure) 7.49 2.54 2-4 90 min A Calico 7.33 2.19 1-4 45 min Carcassonne Big Box (Carcassonne Big Box 5) 6.68 2.25 2-8 40 min Cartographers 7.47 1.88 1-100 45 min The Crew: Mission Deep Sea 7.77 2.01 2-5 20 min Decrypto 7.53 1.78 3-8 45 min Dixit Jinx 5.59 1.20 3-6 15 min DOG 5.87 1.45 2-6 45 min Gloomhaven: Jaws of the Lion 8.25 3.62 1-4 120 min T Gwent: Monsters and Scoia'tael 5.74 1.62 2-2 30 min Gwent: Nilfgaard and Northern Realms 5.74 1.67 2-2 30 min Hanabi 6.96 1.69 2-5 25 min Karty Dżentelmenów: Epizod Czwarty 1.00 3-15 30 min Karty Dżentelmenów: Epizod Szósty 3-15 0 min Kłamcianka Towarzyska 2.00 3-7 0 min Monolith Arena 6.25 2.40 2-4 45 min Monopoly: Game of Thrones Collector's Edition 5.48 1.31 2-6 180 min Na skrzydłach (Wingspan) 7.93 2.45 1-5 70 min Palce w Pralce (Rock the Beat) 5.82 1.06 4-12 30 min Pandemic Legacy: Season 1 8.42 2.83 2-4 60 min Power Grid: Benelux/Central Europe 7.10 3.14 2-6 120 min Power Grid: China/Korea 7.03 3.27 2-6 120 min Power Grid: France/Italy 7.02 3.29 2-6 120 min Power Grid: Russia \u0026 Japan 6.59 3.09 2-6 120 min Power Grid: The New Power Plants – Set 2 5.56 2-6 120 min Pytania od czapy (Shitty Questions) 1.00 3-8 30 min Race for the Galaxy 7.65 2.99 2-4 60 min T Rising Sun 7.51 3.29 3-5 120 min A Robinson Crusoe: Przygoda na przeklętej wyspie (Robinson Crusoe: Adventures on the Cursed Island) 7.62 3.80 1-4 120 min T Rummikub 6.25 1.73 2-4 60 min Rzuć na Tacę (That's Pretty Clever!) 7.40 1.88 1-4 30 min Sabotażysta (Saboteur) 6.44 1.32 3-10 30 min Sabotażysta: rozszerzenie (Saboteur 2 (expansion-only editions)) 6.50 1.51 2-12 45 min Scrabble 6.15 2.08 2-4 90 min Siedem (Seven7s) 5.65 1.48 2-4 20 min Splendor 7.31 1.79 2-4 30 min Tajniacy (Codenames) 7.48 1.27 2-8 15 min Takie Życie 3: Tajemnice (MindMaze: Verzwickte Rätsel – Kriminalfälle) 2-99 30 min Terraformacja Marsa (Terraforming Mars) 8.25 3.25 1-5 120 min T Timeline 6.00 1.16 2-8 15 min Uga Buga (Ooga Booga) 5.64 1.02 3-6 10 min Wsiąść do Pociągu: Europa (Ticket to Ride: Europe) 7.42 1.93 2-5 60 min Wysokie Napięcie: Doładowana Wersja (Power Grid) 7.73 3.26 2-6 120 min const filterRow = document.getElementById(\"filterRow\"); const nameFilter = document.getElementById(\"nameFilter\"); const ratingFilter = document.getElementById(\"ratingFilter\"); const weightFilter = document.getElementById(\"weightFilter\"); const playersFilter = document.getElementById(\"playersFilter\"); const timeFilter = document.getElementById(\"timeFilter\"); const boardGameRows = Array.from(document.getElementsByClassName(\"boardGameRow\")); function updateFilters() { boardGameRows.forEach(row = row.style.visibility = \"collapse\"); boardGameRows.forEach(row = { const name = row.children[0].textContent; const textNormalize = (text) = text.trim().toLowerCase(); const nameOk = textNormalize(name).includes(textNormalize(nameFilter.value)); const rating = Number(row.children[1].textContent); const ratingOk = rating = Number(ratingFilter.value); const weight = Number(row.children[2].textContent); const weightOk = Number(weightFilter.value) ","date":"2022-02-22","objectID":"/pl/kolekcja-gier-planszowych/:0:0","tags":null,"title":"Kolekcja gier planszowych","uri":"/pl/kolekcja-gier-planszowych/"}]